
@using WebApplication4.Models
@using static WebApplication4.Models.Stock
    @{
        ViewData["Title"] = "Gear Stock";

    }


<h1 class="text-center mt-4">Gear Stock</h1>
<div style="text-align: center; margin-bottom: 1rem;">
    <a asp-action="PickItem" asp-controller="Stocks" style="background-color: #336539; color: white; padding: 0.5rem 1.5rem; border-radius: 1rem; text-decoration: none; font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1); transition: background-color 0.2s;">
        + Create New
    </a>
</div>

<form asp-controller="Stocks" asp-action="Index"
style="width: 80%; margin: 0 auto 2rem auto; display: flex; gap: 1rem; align-items: center; padding: 1rem; background-color: white; border-radius: 1rem; box-shadow: 0 4px 10px rgba(0,0,0,0.1); flex-wrap: wrap; justify-content: center;">

    <input type="text" name="SearchTerm" value="@ViewBag.SearchTerm" placeholder="Search by item, email, or student number"
    style="border: 1px solid #ccc; border-radius: 1rem; padding: 0.5rem 1rem; width: 70%; outline: none; box-shadow: none; transition: box-shadow 0.2s;"/>

    <input type="submit"
    style="background-color: #3B82F6; color: white; border: none; padding: 0.5rem 1.5rem; border-radius: 1rem; cursor: pointer; font-weight: bold; transition: background-color 0.2s;" value="Search"/>

</form>

<div class="d-flex justify-content-center gap-4 mb-5">
    <div class="card text-center shadow-sm" style="width: 220px;">
        <div class="card-body">
            <h5 class="card-title">Gear Hired</h5>
            <p style="color: #336539;" class="display-6 text-primary fw-bold">@ViewBag.GearHire</p>
        </div>
    </div>
    <div class="card text-center shadow-sm" style="width: 220px;">
        <div class="card-body">
            <h5 class="card-title">Available Stock</h5>
            <p  style="color: #336539;"class="display-6 text-primary fw-bold">@ViewBag.StockNumber</p>
        </div>
    </div>
</div>
@{
    if (ViewBag.SearchTerm != null)
    {
        <span style="color: #336539;">@ViewBag.Count results found</span>

    }
}


<div class="table-responsive">
    <table class="table table-hover align-middle">
        <thead class="table-dark">
            <tr>
                <th>Item Name</th>
                <th>Brand</th>

                <th>Colour</th>

                <th style="text-align: center;">Size</th>
                <th style="text-align: center;">Stock Number</th>
                <th colspan="4">Status / Details</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Items.Name</td>
                    
<td>@item.Brand</td>

                    <td>@item.Colour</td>



                    <td>
                    @if(item.Items.CategoryId == 1)
                    {
                            <form asp-action="UpdateShoeSize" asp-controller="Stocks" method="post" style="text-align: center; margin: 20px 0;">
                                <strong>
                                    <select onchange="this.form.submit()" name="s"
                                            style="border: none;
                       font-size: 1.2rem;
                      
                       background-color: #fff;
                       box-shadow: 0 0 5px rgba(0,0,0,0.1);
                       border-radius: 4px;
                       appearance: none;
                       -webkit-appearance: none;
                   
                       cursor: pointer;">
                                        <option value="">@item.ShoeSizes</option>
                                        @foreach (ShoeSize size in Enum.GetValues(typeof(ShoeSize)))
                                        {
                                            <option value="@size">@size.ToString()</option>
                                        }
                                    </select>
                                </strong>

                                <input type="hidden" name="Id" value="@item.StockId" />
                                <input type="hidden" name="searchTerm" value="@ViewBag.SearchTerm" />
                                <input type="hidden" name="Page" value="@ViewBag.Page" />
                            </form>

                    }else
                    {
                            <form asp-action="UpdateSize" asp-controller="Stocks" method="post" style="text-align: center; margin: 20px 0;">
                                <strong>
                                    <select onchange="this.form.submit();" name="s"
                                            style="border: none;
                       font-size: 1.2rem;
                       background-color: #fff;
                       box-shadow: 0 0 5px rgba(0,0,0,0.1);
                       border-radius: 4px;
                       appearance: none;
                       -webkit-appearance: none;
                       cursor: pointer;">
                                        <option value="">@item.ClothingSizes</option>
                                        @foreach (ClothingSize size in Enum.GetValues(typeof(ClothingSize)))
                                        {
                                            <option value="@size">@size.ToString()</option>
                                        }
                                    </select>
                                </strong>

                                <input type="hidden" name="Id" value="@item.StockId" />
                                <input type="hidden" name="searchTerm" value="@ViewBag.SearchTerm" />
                                <input type="hidden" name="Page" value="@ViewBag.Page" />
                            </form>

                     
                    }
                    </td>

                    <form asp-action="UpdateStockNumber" asp-controller="Stocks" method="post">
                    <td style="text-align: center;">
                        <strong>
                            <input onchange="this.form.submit();" name="StockNumber" type="text" value="@item.StockNumber"
                                   style="border: none; background: transparent; text-align: center; font-weight: bold;"
                                   autocomplete="off" />
                        </strong>
                        <input type="hidden" name="Id" value="@item.StockId" />
                        <input type="hidden" name="searchTerm" value="@ViewBag.SearchTerm" />
                        <input type="hidden" name="Page" value="@ViewBag.Page" />
                    </td>
                    </form>

           
                    <td colspan="4">
                        @if (item.OrderId != null)
                        {
                            <span class="badge rounded-pill bg-success px-3 py-2">
                                <i class="bi bi-person-check-fill"></i> In Use
                            </span>
                        }
                        else
                        {
                            <span class="badge rounded-pill bg-light text-dark border px-3 py-2">
                                <i class="bi bi-slash-circle"></i> Not in Use
                            </span>
                        }
                    </td>
                    <td>
                       <a  asp-action="Edit" asp-route-id="@item.StockId" asp-route-Page="@ViewBag.Page" asp-route-SearchTerm="@ViewBag.SearchTerm"
                        class="btn btn-sm text-white me-1"
                        style="background-color: #336539; border-radius: 0.5rem;">
                        <i class="bi bi-pencil-fill"></i> Edit
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.StockId"
                           class="btn btn-sm text-white"
                           style="background-color: #EF4444; border-radius: 0.5rem;">
                            <i class="bi bi-trash-fill"></i> Delete
                        </a>
                    </td>
                </tr>
                

                <tr class="table-light" style="background-color: lightblue;">
                    <td></td>
                    <td></td>

                    @if (item.OrderId != null && item.order.user != null)
                    {
                        <td style="text-align: center;">@item.order.user.FirstName @item.order.user.LastName</td>
                        <td>@item.order.user.Email</td>
                        <td>@item.order.user.StudentNumber</td>
                        <td></td>
                        <td>
                            <form asp-action="UA" method="post" class="d-inline">
                                <input type="hidden" name="StockId" value="@item.StockId" />
                                <input type="hidden" name="SearchTerm" value="@ViewBag.SearchTerm" />
                                <button type="submit"
                                        class="btn btn-sm text-white"
                                        style="background-color: #A855F7; border-radius: 0.5rem;">
                                    <i class="bi bi-box-arrow-left"></i> Unassign
                                </button>
                            </form>
                        </td>
                        <td></td>
                      
                    }
                    else
                    {
                        <td colspan="4" class="text-muted fst-italic text-center">— No user assigned —</td>
                        <td></td>
                        <td></td>
                    }
                </tr>

                <tr>
                    <td colspan="7" style="height: 20px;"></td>
                </tr>
            }
        </tbody>
    </table>
</div>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        @{
            int currentPage = Model.PageIndex;
            int totalPages = Model.TotalPages;
            int maxButtons = 7;
            int startPage = Math.Max(1, currentPage - 2);
            int endPage = Math.Min(totalPages, startPage + maxButtons - 1);

            if (endPage - startPage < maxButtons)
                startPage = Math.Max(1, endPage - maxButtons + 1);

            var searchTerm = ViewBag.CurrentFilter as string ?? "";
            var sortOrder = ViewBag.CurrentSort as string ?? "";
        }

        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, searchTerm, sortOrder })">Previous</a>
            </li>
        }

        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, searchTerm, sortOrder })">@i</a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, searchTerm, sortOrder })">Next</a>
            </li>
        }
    </ul>
</nav>

<style>
    .pagination .page-item.active .page-link {
        background-color: #064420;
        border-color: #064420;
        color: white;
    }

    .pagination .page-link {
        color: #336539;
        border-color: #336539;
    }

        .pagination .page-link:hover {
            background-color: #0b5e34;
            color: white;
            border-color: #0b5e34;
        }
</style>









<script>
    // Save scroll position before unload
    window.addEventListener("beforeunload", () => {
        localStorage.setItem("scrollY", window.scrollY);
    });

    // Restore scroll position on load
    window.addEventListener("load", () => {
        const scrollY = localStorage.getItem("scrollY");
        if (scrollY !== null) {
            window.scrollTo(0, parseInt(scrollY));
        }
    });
</script>

