@model IEnumerable<WebApplication4.Models.Item>
@using static WebApplication4.Models.Stock

@{
    ViewData["Title"] = "Index";
    var stockList = ViewBag.Stock as List<WebApplication4.Models.Stock>;
}
<h1 style="font-size: 1.5rem; font-weight: bold; margin-bottom: 0.5rem; margin-top:3%;">
    Creating Order For @ViewBag.orderUser.FirstName @ViewBag.orderUser.LastName
</h1>
<p style="font-size: 0.9rem; color: #555; margin: 0.2rem 0;">
    Student number: @ViewBag.orderUser.StudentNumber
</p>

    <style>
        .Added {
            background-color: #eaffea;
            opacity: 0.5;
        }
    </style>

<div class="A" style="max-height: 40vh; overflow-y: auto;">
    <table class="table table-bordered">
        <thead class="table-success">
            <tr >
                <th>@Html.DisplayNameFor(model => model.First().Name)</th>
                <th>@Html.DisplayNameFor(model => model.First().Price)</th>
                <th>Sizes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {




string ClassName = " ";
if(ViewBag.ItemId == item.ItemId){

ClassName = "Added";

}


                
                    <tr class="@ClassName">
                

                    <td>@item.Name</td>
                    <td>$@item.Price</td>
                    <td>
                        <form asp-action="AddItem">

                            <input type="hidden" value="@ViewBag.OrderId" name="OrderId" />
                            <input type="hidden" name="ItemId" value="@item.ItemId" />

                            <select Name="Size" class="form-select" onchange="this.form.submit()">
                           
                            @{
                                string x = " ";
                            }
                            <option disabled selected>Pick available Sizes</option>

                            @foreach (var stock in ViewBag.Stock)
                            {


                                if (item.CategoryId == 1)
                                {
                                    if (stock.ItemId == item.ItemId && stock.ShoeSizes != null)
                                    {
                                        if(x != @stock.ShoeSizes.ToString()){
                                        <option  value="@stock.ShoeSizes.ToString()">
                                            @stock.ShoeSizes.ToString()
                                        </option>
                                        }
                                        x = @stock.ShoeSizes.ToString();
                                    }
                                }
                               

                               else {
                                    if (stock.ItemId == item.ItemId && stock.ClothingSizes != null)
                                    {
                                        if (x != @stock.ClothingSizes.ToString())
                                        {
                                        <option  value="@stock.ClothingSizes.ToString()">
                                            @stock.ClothingSizes.ToString()
                                        </option>
                                        }
                                        x = @stock.ClothingSizes.ToString();

                                    }
                                }
                               
                            }
                        </select>
                        </form>
                    </td>
                </tr>
            }
            
        </tbody>
    </table>
</div>

<style>
    thead th {
        position: sticky;
        top: 0;
        background-color: darkgreen;
        color: white;
        z-index: 10;
    }
</style>
<style>
    h1 {
        font-size: 2rem;
        font-weight: 600;
        letter-spacing: 0.5px;
    }

    thead th {
        position: sticky;
        top: 0;
        color: black;
        z-index: 10;
    }

    .btn-outline-danger {
        border-radius: 50%;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .btn-outline-danger:hover {
            background-color: #e63946;
            color: #fff;
            border-color: #e63946;
        }

    .btn-success {
        background-color: #008080;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-success:hover {
            background-color: #006666;
        }

    .text-primary {
        color: #008080 !important;
    }

    .scrollable-table {
        max-height: 70vh;
        overflow-y: auto;
    }
</style>
<br />
<h1 style="font-size: 1.5rem; font-weight: bold; margin-bottom: 0.5rem; margin-top:3%;">
    Items Added 
</h1>
<!-- Scrollable table container -->
<div class="table-responsive scrollable-table mt-4">
    <table class="table align-middle table-borderless shadow-sm">
        <thead class="border-bottom border-2">
            <tr class="text-muted small text-uppercase">
                <th>Item</th>
                <th class="text-center">Quantity</th>
                <th class="text-center">Price</th>
                <th class="text-center">Size</th>
                <th class="text-center">Total</th>
                <th class="text-left">Remove</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var OrderItem in ViewBag.OrderItems)
            {






                <tr class="border-bottom">
                    <td class="fw-semibold">@OrderItem.Items.Name</td>
                    <td class="text-center">@OrderItem.Quantity</td>
                    <td class="text-center">$@OrderItem.Items.Price.ToString("F2")</td>
                    <td class="text-center">@OrderItem.SizesReq</td>
                    

                    <td class="text-center">
                        $@((OrderItem.Quantity * OrderItem.Items.Price).ToString("F2"))
                    </td>

                    

                    
                    <td class="text-center">
                        @if (OrderItem.Orders.StatusId == 5)
                        {
                            <form asp-action="DeleteItem" method="post" style="display:inline;">
                                <input type="hidden" name="OrderId" value="@OrderItem.OrderId" />
                               <input type="hidden" name="ItemId" value="@OrderItem.ItemId" />


                                <button type="submit" title="Remove item" class="btn-outline-danger">×</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<div class="text-end mt-3">
    <h4>Total Cost: <span class="text-primary fw-bold">@ViewBag.Order.TotalPrice.ToString("F2")</span></h4>
    <form asp-action="Confirm" >
        <input type="hidden" name="OrderId" value="@ViewBag.OrderId" />
        <input type="submit" value="Confrim" class="btn btn-success mt-2"/>
    </form>
</div>
<script>
    const scrollKey = "scroll-A";

    window.addEventListener("beforeunload", () => {
        const scrollDiv = document.querySelector(".A");
        if (scrollDiv) {
            localStorage.setItem(scrollKey, scrollDiv.scrollTop);
        }
    });

    window.addEventListener("load", () => {
        const scrollDiv = document.querySelector(".A");
        const savedScroll = localStorage.getItem(scrollKey);
        if (scrollDiv && savedScroll !== null) {
            scrollDiv.scrollTop = parseInt(savedScroll);
        }
    });
</script>


