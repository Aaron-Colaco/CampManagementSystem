@using System.Text.Json
@{
    ViewData["Title"] = "Sales Dashboard";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container py-5">
    <h2 class="mb-4">Sales Dashboard</h2>
    <p class="text-muted">
        Showing analytics between <strong>@ViewBag.Date1.ToShortDateString()</strong> and <strong>@ViewBag.Date2.ToShortDateString()</strong>
    </p>

    <!-- Analytics Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card text-white shadow-sm" style="background-color: #116530;">
                <div class="card-body">
                    <h5 class="card-title">Total Orders</h5>
                    <p class="display-6">@ViewBag.Orders</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white shadow-sm" style="background-color: #116530;">
                <div class="card-body">
                    <h5 class="card-title">Items Hired</h5>
                    <p class="display-6">@ViewBag.ItemsHired</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white shadow-sm" style="background-color: #116530;">
                <div class="card-body">
                    <h5 class="card-title">Total Revenue</h5>
                    <p class="display-6">$@String.Format("{0:N2}", ViewBag.TotalMoney)</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Top Items Chart -->
    <div class="card shadow-sm mb-5">
        <div class="card-header">
            <h5 class="mb-0">Tops Hires </h5>
        </div>
        <div class="card-body">
            <canvas id="topItemsChart" height="100"></canvas>
        </div>
    </div>

    <!-- Profit per Item Chart -->
    <div class="card shadow-sm mb-5">
        <div class="card-header">
            <h5 class="mb-0">Profit per Item</h5>
        </div>
        <div class="card-body">
            <canvas id="profitChart" height="100"></canvas>
        </div>
    </div>

    <!-- Profit Breakdown Table -->
    <div class="card shadow-sm mb-5">
        <div class="card-header">
            <h5 class="mb-0">Item Profit Breakdown</h5>
        </div>
        <div class="card-body">
            <table class="table table-light table-striped">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Quantity Sold</th>
                        <th>Profit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in (IEnumerable<dynamic>)ViewBag.ItemProfitTable)
                    {
                        <tr>
                            <td>@item.ItemName</td>
                            <td>@item.Quantity</td>
                            <td>$@String.Format("{0:N2}", item.Profit)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Scripts -->
<script>
    // Top Items Chart
    const labels = @Html.Raw(JsonSerializer.Serialize(ViewBag.TopItemLabels));
    const data = @Html.Raw(JsonSerializer.Serialize(ViewBag.TopItemQuantities));

    const ctx = document.getElementById('topItemsChart').getContext('2d');
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Quantity Hired',
                data: data,
                backgroundColor: '#808080',

                borderWidth: 1,
                borderRadius: 5
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: false },
                title: {
                    display: true,
                    text: 'Items by Quantity Hired',
                    font: { size: 18 },
                    color: '#116530'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: { stepSize: 1, color: '#333' },
                    grid: { color: 'rgba(0,0,0,0.05)' }
                },
                x: {
                    ticks: { color: '#333' },
                    grid: { color: 'rgba(0,0,0,0.03)' }
                }
            }
        }
    });

    // Profit Chart
    const profitLabels = @Html.Raw(JsonSerializer.Serialize(ViewBag.ItemProfitLabels));
    const profitData = @Html.Raw(JsonSerializer.Serialize(ViewBag.ItemProfits));

    const profitCtx = document.getElementById('profitChart').getContext('2d');
    new Chart(profitCtx, {
        type: 'bar',
        data: {
            labels: profitLabels,
            datasets: [{
                label: 'Profit ($)',
                data: profitData,
                backgroundColor: '#808080',
                borderWidth: 1,
                borderRadius: 5
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: false },
                title: {
                    display: true,
                    text: 'Profit by Item',
                    font: { size: 18 },
                    color: '#116530'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: { color: '#333' },
                    grid: { color: 'rgba(0,0,0,0.05)' }
                },
                x: {
                    ticks: { color: '#333' },
                    grid: { color: 'rgba(0,0,0,0.03)' }
                }
            }
        }
    });
</script>
