@using WebApplication4.Models
@using static WebApplication4.Models.Stock

@{
    ViewData["Title"] = "Orders";
}



@if (TempData["SuccessMessage"] != null)
{
    <div class="toast-container position-fixed top-0 end-0 p-4" style="z-index: 1080; top: 80px; margin-top: 5%;">
        <div class="toast align-items-center border-0 show shadow-lg" role="alert" aria-live="assertive" aria-atomic="true" style="background-color: #e6f4ea; color: #4b5e6a; min-width: 300px; border-radius: 8px;">
            <div class="d-flex">
                <div class="toast-body py-3 px-4" style="font-size: 1rem; font-weight: 500;">
                    @TempData["SuccessMessage"]
                </div>
                <button type="button" class="btn-close me-3 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        const toastEl = document.querySelector('.toast');
        if (toastEl) {
            const toast = new bootstrap.Toast(toastEl, {
                delay: 3000,
                autohide: true
            });
            toast.show();
        }
    </script>
}

<style>
    .alert-warning {
    background-color: #fdf7e3;
    color: #8c783f;
    border-color: #f0e3b4;
    }

    .alert-danger {
    background-color: #fbeaea;
    color: #7a2d2d;
    border-color: #f3c6c6;
    }


</style>
<style>
    .bg-warning {
        background-color: #e8aa0e !important;
        color: #fff;
    }

    .bg-danger {
        background-color: #ab2c41 !important;
        color: #fff;
    }
</style>


    @if (User.IsInRole("Admin"))
    {
        <h1 class="text-center mt-4">Orders</h1>
        <div style="text-align: center; margin-bottom: 1rem;">
            <a asp-action="Create" asp-controller="Orders" style="background-color: #336539; color: white; padding: 0.5rem 1.5rem; border-radius: 1rem; text-decoration: none; font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1); transition: background-color 0.2s;">
                + Create New
            </a>
        </div>



        <form asp-controller="Orders" asp-action="Index" method="get"
              style="width: 80%; margin: 0 auto; display: flex; gap: 1rem; align-items: center; padding: 1rem; background-color: white; border-radius: 1rem; box-shadow: 0 4px 10px rgba(0,0,0,0.1); flex-wrap: wrap; justify-content: center;">

            <input type="text" name="SearchTerm" placeholder="Search Order by User Details"
                   style="border: 1px solid #ccc; border-radius: 1rem; padding: 0.5rem 1rem; width: 70%; outline: none; box-shadow: none; transition: box-shadow 0.2s;"
                   onfocus="this.style.boxShadow='0 0 0 2px #3B82F6'" onblur="this.style.boxShadow='none'" />

            <select name="Status"
                    style="border: 1px solid #ccc; border-radius: 1rem; padding: 0.5rem 1rem; outline: none; box-shadow: none; transition: box-shadow 0.2s;">
                <option value="">All</option>
                <option value="2">Processing</option>
                <option value="3">Return</option>
                <option value="4">Unreturned</option>
            </select>

            <input type="submit" value="Search"
                   style="background-color: #3B82F6; color: white; border: none; padding: 0.5rem 1.5rem; border-radius: 1rem; cursor: pointer; font-weight: bold; transition: background-color 0.2s;" />
        </form>

    }
    <table class="table table-striped table-bordered" Style="Margin-top:5%;">
        <thead class="thead-dark">
            <tr>
                <th>
                    <a class="text-teal" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">
                       OrderTime
                    </a>
                </th>
                <th>Total Price</th>
                <th>Status</th>
                @if (User.IsInRole("Admin"))
                {
                    <th>Student Name</th>
                }
                <th>Actions</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.OrderTime</td>
                    <td>$@item.TotalPrice</td>
                    <td>
                        @if (!User.IsInRole("Admin"))
                        {
                            if (item.StatusId == 2)
                            {
                                <span class="badge bg-success">Your Order is now @item.status.Name</span>
                            }
                            else if(item.StatusId == 1)
                            {
                                <span class="badge bg-warning">Waiting to be Checked out</span>
                            }
                            else if(item.StatusId == 4)
                            {
                                <span class="badge bg-danger">Unreturned</span>

                            }
                            else if (item.StatusId == 3)
                            {
                                <span class="badge bg-success"> Returned </span>


                            }
                          
                        }
                        else
                        {
                            if (item.StatusId == 2)
                            {
                                <span style="background-color: mediumslateblue;" class="badge">Needs Processing</span>

                            }
                           
                            else if (item.StatusId == 4)
                            {
                                <span class="badge bg-danger">Unreturned</span>

                            }
                            else if (item.StatusId == 3)
                            {
                                <span class="badge bg-success"> Returned </span>


                            }
                            else if (item.StatusId == 5)
                            {
                                <span class="badge bg-warning"> Pending </span>


                            }
                        }
                    </td>

                    @if (User.IsInRole("Admin"))
                    {
                                    <td>@item.user.FirstName&nbsp;@item.user.LastName</td>

                    }
                

                    <td>
                        @if (User.IsInRole("Admin"))
                        {
                            if(item.StatusId == 2)
                            {
                            <a class="badge" style="background-color: black; text-decoration: none;" asp-controller="Stocks" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-Status="@ViewBag.Status" asp-route-page="@ViewBag.Page" asp-route-id="@item.OrderId" asp-action="AS">Assign Stock</a>
                            <a class="badge" style="background-color: black; text-decoration: none;" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-Status="@ViewBag.Status" asp-route-page="@ViewBag.Page" asp-controller="Orders" asp-route-id="@item.OrderId" asp-action="Amend">Amend</a>


                               
                            }
if(item.StatusId == 4){

                            <a class="badge" style="color: white; background-color: black; text-decoration: none;" asp-controller="OrderItems" asp-route-id="@item.OrderId" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-Status="@ViewBag.Status" asp-route-page="@ViewBag.Page"  asp-action="Index">Return Items</a>

                                <a class="badge" style="background-color: black; text-decoration: none;" asp-controller="Orders" asp-route-id="@item.OrderId"  asp-action="Amend">Amend</a>


}
if(item.StatusId == 3){
                            <a class="badge" style="color: white; background-color: black; text-decoration: none;" asp-controller="OrderItems" asp-route-id="@item.OrderId" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-Status="@ViewBag.Status" asp-route-page="@ViewBag.Page" asp-action="Index">See Items</a>
                            <a class="badge" style="color: white; background-color: black; text-decoration: none;" asp-action="Details" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-Status="@ViewBag.Status" asp-route-page="@ViewBag.Page"  asp-route-id="@item.OrderId">Details</a>
                          

}

                        }
                        @if(item.StatusId == 4 && User.IsInRole("Admin")){
                        <a class="badge" style="background-color: black; text-decoration: none;" asp-controller="Orders" asp-route-id="@item.OrderId" asp-action="Invoice">Print Invoice</a>
                        }

                       


                        @if (item.StatusId == 4 && !User.IsInRole("Admin"))
                        {

                            <a class="badge" style="color: white; background-color: black; text-decoration: none;" asp-action="Details" asp-route-id="@item.OrderId">Details</a>
                            <a class="badge" style="color: white; background-color: black; text-decoration: none;" asp-controller="OrderItems" asp-route-id="@item.OrderId" asp-action="Index">See Items</a>

                        }



                        @if (item.StatusId == 5 && User.IsInRole("Admin"))
                        {
                            <form asp-action="CreateOrder" asp-controller="Orders" method="post" style="display: inline;">
                                <input type="hidden" name="OrderId" value="@item.OrderId" />
                                <button type="submit" class="badge"
                                        style="color: white; background-color: black; text-decoration: none; border: none; cursor: pointer;">
                                    Add Items
                                </button>
                            </form>

                        <a class="badge" style="color: white; background-color: black; text-decoration: none;" asp-action="Delete" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-Status="@ViewBag.Status" asp-route-page="@ViewBag.Page" asp-route-id="@item.OrderId">Delete</a>

                        }
                        else
                        {
                                                   @if (!User.IsInRole("Admin")){

                            <a class="badge" style="color: white; background-color: black; text-decoration: none;" asp-controller="OrderItems" asp-route-id="@item.OrderId" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-Status="@ViewBag.Status" asp-route-page="@ViewBag.Page" asp-action="Index">See Items</a>
                            <a class="badge" style="color: white; background-color: black; text-decoration: none;" asp-action="Details" asp-route-id="@item.OrderId" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-Status="@ViewBag.Status" asp-route-page="@ViewBag.Page">Details</a>

                                                   }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>


<style>
    .btn btn-info{
        color: white;
        background-color: black;
    }
    body {
        background-color: #f9fafb;
        font-family: 'Segoe UI', sans-serif;
    }

    h2 {
        color: #111827;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .badge:hover {
        
        text-decoration: none;
       opacity: 0.5;
       background-color: white;
       colour: black;
    }


    .btn {
        border-radius: 1rem;
        padding: 0.4rem 1rem;
        font-weight: 500;
        transition: background-color 0.2s ease, box-shadow 0.2s ease;
    }

        .btn:hover {
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
        }

    .table {
        background-color: white;
        border-radius: 1rem;
        overflow: hidden;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.05);
    }

        .table thead {
            background-color: #f3f4f6;
            color: #374151;
        }

        .table th,
        .table td {
            vertical-align: middle;
            padding: 1rem;
        }

    .badge {
        padding: 0.5rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .text-teal {
        color: teal;
        text-decoration: none;
    }

        .text-teal:hover {
            text-decoration: underline;
        }

    .form-container {
        background-color: white;
        border-radius: 1rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        margin-top: 2rem;
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: center;
        align-items: center;
    }

        .form-container input[type="text"],
        .form-container select {
            border: 1px solid #d1d5db;
            border-radius: 1rem;
            padding: 0.5rem 1rem;
            outline: none;
            transition: box-shadow 0.2s;
        }

            .form-container input[type="text"]:focus,
            .form-container select:focus {
                box-shadow: 0 0 0 2px #3B82F6;
            }

        .form-container input[type="submit"] {
            background-color: #3B82F6;
            color: white;
            border: none;
            padding: 0.5rem 1.5rem;
            border-radius: 1rem;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.2s;
        }

            .form-container input[type="submit"]:hover {
                background-color: #2563eb;
            }
</style>
<nav aria-label="Page navigation" style="margin-top:5%;" >
    <ul class="pagination justify-content-center">
        @{
           
    int currentPage = Model.PageIndex;
    int totalPages = Model.TotalPages;
    int maxButtons = 7;
    int startPage = Math.Max(1, currentPage - 2);
    int endPage = Math.Min(totalPages, startPage + maxButtons - 1);

    if (endPage - startPage < maxButtons)
        startPage = Math.Max(1, endPage - maxButtons + 1);

    var searchTerm = ViewBag.CurrentFilter as string ?? "";
    var sortOrder = ViewBag.CurrentSort as string ?? "";
    var currentStatus = ViewBag.Status as int? ?? 0;
}

@if (Model.HasPreviousPage)
{
    <li class="page-item">
        <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, searchTerm, sortOrder, status = currentStatus })">Previous</a>
    </li>
}

@for (int i = startPage; i <= endPage; i++)
{
    <li class="page-item @(i == currentPage ? "active" : "")">
        <a class="page-link" href="@Url.Action("Index", new { page = i, searchTerm, sortOrder, status = currentStatus })">@i</a>
    </li>
}

@if (Model.HasNextPage)
{
    <li class="page-item">
        <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, searchTerm, sortOrder, status = currentStatus })">Next</a>
    </li>
}

            
    </ul>
</nav>

<style>
    .pagination .page-item.active .page-link {
        background-color: #064420;
        border-color: #064420;
        color: white;
    }

    .pagination .page-link {
        color: #336539;
        border-color: #336539;
    }

        .pagination .page-link:hover {
            background-color: #0b5e34;
            color: white;
            border-color: #0b5e34;
        }
</style>

<script>
    const confirmModal = document.getElementById('confirmModal');
    confirmModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        const orderId = button.getAttribute('data-order-id');
        document.getElementById('orderIdInput').value = orderId;

        
    });
    // Save scroll position before unload
    window.addEventListener("beforeunload", () => {
        localStorage.setItem("scrollY", window.scrollY);
    });

    // Restore scroll position on load
    window.addEventListener("load", () => {
        const scrollY = localStorage.getItem("scrollY");
        if (scrollY !== null) {
            window.scrollTo(0, parseInt(scrollY));
        }
    });
</script>

